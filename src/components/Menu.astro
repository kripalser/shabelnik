---
import { links } from "@data/links";
import type { Link } from "@types";

export interface Props {
  activeMenuItem?: string;
}

const url = new URL(Astro.request.url);
const menu = Object.keys(links.nav).reduce((accumulator: Link[], key) => {
  key !== "index" && accumulator.push(links.nav[key]);
  return accumulator;
}, []);

const { activeMenuItem } = Astro.props;
---

<style lang="scss">
    .list {
        display: grid;
        padding: 0;
        margin: 0;
        list-style: none;
        grid-template-columns: repeat(4, 1fr);
        grid-column-gap: 1rem;
    }

    .item {
        padding-top: .75rem;
        margin: 0 0 2.5rem;
        font-size: 1.5rem;
        font-weight: 700;
        text-transform: uppercase;
        border-top: var(--width-divider-lg) solid var(--color-divider);

        &.active {
            color: var(--color-accent);
            border-color: var(--color-accent);
        }

        a {
            color: inherit;
            text-decoration: none;

            &:hover {
                color: var(--color-accent);
            }
        }
    }
</style>

<nav>
    <ul class="list">
        {menu.map((item) => {
            const isActive = url.pathname === item.url || url.pathname.startsWith(`${item.url}`);
            return (<li class:list={['item', { active: isActive }]}><a href={item.url}>{item.label}</a>{isActive && activeMenuItem ? ` â€” ${activeMenuItem}` : ''}</li>);
        })}
    </ul>
</nav>
